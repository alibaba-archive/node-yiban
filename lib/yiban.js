// Generated by CoffeeScript 1.8.0
(function() {
  var Yiban, request;

  request = require('request');

  Yiban = (function() {
    Yiban.prototype.name = 'yiban';

    Yiban.prototype.host = 'https://openapi.yiban.cn';

    Yiban.prototype.client_id = 'set_client_id';

    Yiban.prototype.client_secret = 'set_client_secret';

    Yiban.prototype.authorize_uri = "/oauth/authorize";

    Yiban.prototype.access_token_uri = "/oauth/access_token";

    Yiban.prototype.redirect_uri = "http://example.com/yiban/callback";

    function Yiban(client_id, client_secret, redirect_uri) {
      this.client_id = client_id;
      this.client_secret = client_secret;
      this.redirect_uri = redirect_uri;
    }

    Yiban.prototype.getAccessToken = function(code, callback) {
      var self;
      self = this;
      return request({
        url: "" + this.host + this.access_token_uri,
        method: 'POST',
        form: {
          client_id: this.client_id,
          client_secret: this.client_secret,
          code: code,
          redirect_uri: this.redirect_uri
        }
      }, function(err, res, body) {
        var json;
        json = res.toJSON();
        if (json.statusCode === 302) {
          return request.get(json.headers.location, function(err, res, body) {
            var e, ret;
            try {
              ret = JSON.parse(body);
              self.access_token = ret.access_token;
            } catch (_error) {
              e = _error;
              ret = {};
            }
            return callback(err, ret);
          });
        } else {
          return callback(err);
        }
      });
    };

    Yiban.prototype.getAuthorizeUrl = function() {
      var authorizeUrl, key, qs, val;
      qs = {
        client_id: this.client_id,
        redirect_uri: encodeURIComponent(this.redirect_uri),
        display: 'web'
      };
      authorizeUrl = "" + this.host + this.authorize_uri + "?";
      for (key in qs) {
        val = qs[key];
        authorizeUrl += "" + key + "=" + val + "&";
      }
      return authorizeUrl;
    };

    Yiban.prototype.api = function(uri, callback) {
      return request.get("" + this.host + uri + "?access_token=" + this.access_token, function(err, res, body) {
        return callback(err, JSON.parse(body));
      });
    };

    Yiban.prototype.oauth = function(options) {
      var self;
      if (options == null) {
        options = {};
      }
      self = this;
      return function(req, res, next) {
        var code;
        if (req.path === options.authorize_uri) {
          return res.redirect(self.getAuthorizeUrl());
        } else if (req.path === options.redirect_uri) {
          code = req.query.code;
          return self.getAccessToken(code, function(err, ret) {
            if (options.callback) {
              return options.callback(err, res, ret);
            } else {
              return res.json(err || ret);
            }
          });
        } else {
          return next();
        }
      };
    };

    return Yiban;

  })();

  module.exports = Yiban;

}).call(this);
